package com.groupcontroldroid.ui;

import java.awt.Color;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.LayoutManager;
import java.awt.TextField;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;

import javax.swing.ImageIcon;
import javax.swing.JFrame;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.android.ddmlib.AndroidDebugBridge;
import com.android.ddmlib.IDevice;
import com.groupcontroldroid.util.AdbUtil;

/**
 *
 * @author __USER__
 */
public class Entrance extends JFrame {
	final static Logger logger = LoggerFactory.getLogger(Entrance.class);
	private static final long serialVersionUID = 5283947056196297613L;

	TextField connectedCountDeviceTextField = new TextField();
	TextField totalCountDeviceTextField = new TextField();
	Thread countDeviceThread = null;

	/** Creates new form entrance */
	public Entrance() {
		initComponents();
		this.setLocationRelativeTo(null);
		this.setWindowIcon();
		this.setResizable(false);
		// 退出动作
		this.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				super.windowClosing(e);
				System.exit(0);
			}

		});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jFrame1 = new javax.swing.JFrame();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();

		javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
		jFrame1.getContentPane().setLayout(jFrame1Layout);
		jFrame1Layout.setHorizontalGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 400, Short.MAX_VALUE));
		jFrame1Layout.setVerticalGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 300, Short.MAX_VALUE));

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("群控大师 v1.4");
		setBackground(new java.awt.Color(255, 255, 255));

		jButton1.setText("打开程序");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("关闭程序");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jButton3.setText("测试设备连接");
		jButton3.setActionCommand("");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		ImageIcon icon = new ImageIcon("./res/img/logo.jpg");
		jLabel1.setIcon(icon);
		jFrame1.setBackground(Color.WHITE);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(29, 29, 29).addComponent(jLabel1)
						.addContainerGap(29, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(38, 38, 38).addComponent(jLabel1)
						.addContainerGap(47, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup().addContainerGap().addComponent(jButton3,
												javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup().addContainerGap().addComponent(jButton2,
												javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup().addContainerGap().addComponent(jButton1,
												javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
								.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap()
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
						.addComponent(jButton1).addGap(18, 18, 18)
						.addComponent(jButton3).addGap(18, 18, 18)
						.addComponent(jButton2).addGap(18, 18, 18)
						));

		pack();
	}// </editor-fold>
		// GEN-END:initComponents

	/**
	 * 点击测试连接按钮
	 * 
	 * @param evt
	 */
	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		JFrame frame = new JFrame("设备连接测试");
		LayoutManager layout = new GridLayout(2, 2);
		frame.setLayout(layout);
		frame.setBounds(20, 20, 300, 100);
		frame.setVisible(true);
		frame.setResizable(false);
		frame.setLocationRelativeTo(null);

		TextField textFiled1 = new TextField("可用设备数");
		textFiled1.setEditable(false);
		connectedCountDeviceTextField.setEditable(false);
		frame.getContentPane().add(textFiled1);
		frame.getContentPane().add(connectedCountDeviceTextField);

		TextField textFiled2 = new TextField("总设备数");
		textFiled2.setEditable(false);
		totalCountDeviceTextField.setEnabled(false);
		frame.getContentPane().add(textFiled2);
		frame.getContentPane().add(totalCountDeviceTextField);

		// 设备数监听
		Thread countDeviceThread = new Thread(new Runnable() {
			@Override
			public void run() {
				int connected = 0, total = 0;// 已在线设备数，总设备数
				AndroidDebugBridge bridge = AdbUtil.getADBInstance();
				if (bridge != null) {
					try {
						while (!Thread.currentThread().isInterrupted()) {
							IDevice[] devices = bridge.getDevices();
							if (devices != null) {
								total = devices.length;
								connected = 0;
								for (IDevice device : devices) {
									if (device != null && device.isOnline()) {
										connected++;
									}
								}
							}
							connectedCountDeviceTextField.setText(String.format("%d", connected));
							totalCountDeviceTextField.setText(String.format("%d", total));

							Thread.sleep(500);

						}
					} catch (InterruptedException e) {
						logger.info("设备数目监听线程退出");
					}
				}
			}
		}, "CountDeviceThread");
		countDeviceThread.start();

		/* 窗口退出，退出线程 */
		frame.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent we) {
				countDeviceThread.interrupt();
			}
		});
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		new Thread() {
			// 重写run方法
			public void run() {
				String cmd = null;
				if(System.getProperty("os.name").toLowerCase().startsWith("win")){
					cmd = "gui/moc_gui-win32-ia32/moc_gui.exe";
				}else{
					cmd = "gui/moc_gui-linux-x64/moc_gui";
				}

				try {
					// 执行操作
					Runtime.getRuntime().exec(cmd);
				} catch (IOException ignore) {
					// 打印异常
					ignore.printStackTrace();
				}
			}
		}.start();// 启动线程
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		dispose();
		System.exit(0);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Entrance().setVisible(true);
			}
		});
	}

	public void setWindowIcon() {
		Toolkit tk = Toolkit.getDefaultToolkit();
		Image image = tk.createImage("./res/img/logo.jpg"); /* image.gif是你的图标 */
		this.setIconImage(image);
	}

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JFrame jFrame1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	// End of variables declaration//GEN-END:variables
}